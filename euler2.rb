#!/usr/bin/env ruby 

###############

#Project Euler Problem 2

# Question #
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

###############

max_num = 4000000
# max_num = 1000

def fib(n)
  curr = 0
  succ = 1

  n.times do |i|
    curr, succ = succ, curr + succ
  end
  return curr
end

iteration = 0
total_number = fib(iteration)


until total_number >= max_num do
	iteration = iteration + 1
	puts "#{iteration} Iteration"
	total_number = fib(iteration)
	puts "The current number is #{total_number}"
end



